#                             #                                                                         #
#                             #                                                                         #
#                             #                                                                         #
#                             ###########################################################################
#                             #                                                                         #
#                             #   ███╗░░░███╗███████╗░██████╗░██████╗░█████╗░░██████╗░███████╗░██████╗  #
#                             #   ████╗░████║██╔════╝██╔════╝██╔════╝██╔══██╗██╔════╝░██╔════╝██╔════╝  #
#                             #   ██╔████╔██║█████╗░░╚█████╗░╚█████╗░███████║██║░░██╗░█████╗░░╚█████╗░  #
#                             #   ██║╚██╔╝██║██╔══╝░░░╚═══██╗░╚═══██╗██╔══██║██║░░╚██╗██╔══╝░░░╚═══██╗  #
#                             #   ██║░╚═╝░██║███████╗██████╔╝██████╔╝██║░░██║╚██████╔╝███████╗██████╔╝  #
#                             #   ╚═╝░░░░░╚═╝╚══════╝╚═════╝░╚═════╝░╚═╝░░╚═╝░╚═════╝░╚══════╝╚═════╝░  #
#                             #                                                                         #
#                             ###########################################################################
#
#
# Bienvenu dans le fichier de la configuration des messages.
# À savoir que ce fichier n'est pas pris en compte par le plugin s'il n'est pas nommé "messages_en.yml"
# Quand vous faites un changement dans ce fichier, il n'y a pas besoin d'exécuter une commande. Juste sauvegardez le
# fichier et le plugin va prendre en compte les changements.
#
#
#
# Tout d'abord, le plugin vous permet d'utiliser les codes couleurs de Minecraft. Par exemple, si vous voulez écrire
# votre message en rouge, vous devrez utiliser "&4" devant le texte
# (tous les codes couleurs sont trouvables ici : https://minecraft.tools/fr/color-code.php).
# Mais vous pouvez aussi générer des gradients (=variation d'une couleur A vers une couleur B) en utilisant le format
# suivant : "<s:[code RGB de la première couleur]>[votre message]<e:[code RGB de la deuxième couleur]>
# Exemple :
# Je veux un gradient de bleu clair (code : 80FFFF) jusqu'à rose (code : FF99FF) appliqué à la phrase suivante :
# "démonstration d'un gradient"
# J'aurai :
#   <s:80FFFF>démonstration d'un gradient<e:FF99FF>
# À savoir que vous pouvez utiliser les codes de format (comme italic ou gras), il faut alors rajouter ce code
# devant. Exemple :
#   <s:80FFFF>&ldémonstration d'un gradient<e:FF99FF>
#
#
#
# Un message n'est pas juste du texte dans le tchat ! Il y a plus à faire !
# Pour chaque message (sauf précision contraire) vous pouvez ajouter :
# - un hover message : lorsque le joueur met sa souris sur le message dans le tchat
# - une commande à lancer : lorsque le joueur clique sur le message dans le tchat
# - une commande de suggestion : lorsque le joueur clique sur le message dans le tchat
# - un message de barre d'action : à afficher au-dessus de la barre d'action
#
# Pour les configurer, c'est super facile ! Il faut juste ajouter au nom du message un mot après :
# - Hover : pour les hover message
# - Run : pour les commandes à lancer
# - Suggest : pour les commandes de suggestion
# - Hotbar : pour les messages au-dessus de la hotbar
# Exemple :
#   HelloMessage: "Salut joueur !"
#   HelloMessageHover: "Ho ? Tu as mis ta souris sur moi !"
#   HelloMessageRun: "/hello"
#   HelloHotbar: "Salut de la hotbar !"
#
# Dans notre exemple, le plugin va envoyer un message dans le tchat au joueur. Lorsqu'il va mettre sa souris dessus
# il va voir "Ho ? Tu as mis ta souris sur moi !". Lorsqu'il va cliquer dessus, il va exécuter la commande "/hello".
# Et en plus de tout ça, il va voir au-dessus de sa hotbar le message "Salut de la hotbar !"
#
# À savoir que (si le message n'est pas nécessaire), il n'est pas obligatoire de configurer le message originel
# pour pouvoir un message de Hotbar. Vous allez voir que j'ai préconfiguré quelques messages comme ça.
#
#
#
# Certains messages ne sont pas obligatoires. Il est toujours marqué quand c'est le cas.
#
#
#
# Dans le texte qui liste tous les PlaceHolders utilisables (PH), vous allez voir parfois {block} ou {property}.
# Ça veut dire que vous pouvez utiliser ces PlaceHolders :
# {block_material} : pour avoir le matériel du block
# {block_loc_x} : la coordonnée X du bloc
# {block_loc_y} : la coordonnée Y du bloc
# {block_loc_z} : la coordonnée Z du bloc
# {block_loc_world} : pour avoir le nom du monde du bloc
#
# {property_name} : le nom de la propriété
# {property_durability} : la durabilité de la propriété
# {property_perm} : la permission requise pour éditer la propriété
#
#
#
# Le plugin vous permet d'utiliser les PlaceHolders de PlaceHolderAPI (ou PAPI). Dans chaque message vous pouvez
# utiliser les placeholders de PAPI (n'oubliez pas de les installer avant avec la commande :
# "/papi ecloud download <placeholders>"
# Dans PAPI, il y a trois types de placeholders :
# - ceux qui ne concernent aucun joueur (ex: %server_name%) : utilisable partout
# - ceux qui concernent un joueur en ligne (ex: %player_name%) : vous serez averti quand vous pourrez les utiliser
# - ceux qui concernent un joueur déconnecté : nulle part =/
#
#
#
# Pour finir, il est intéressant de savoir que vous pouvez créer vos propres variables dans la section nommée
# "PersonalVariable".
# Vous allez y ajouter le nom de la variable suivi de sa valeur. Et vous pourrez l'utiliser dans n'importe quel message
# de n'importe quel type en écrivant "{nom_de_la_variable}". Vous pouvez en créer autant que vous voulez !
# Exemple :
# PersonalVariable:
#  prefix: "&3[&6&lProtected&e-DS&3]&r"
# Ici pour utiliser la variable "prefix", je devrai marquer "{prefix}" dans le message. "{prefix}" sera alors remplacé
# par "&3[&6&lProtected&e-DS&3]&r" (colorié).
#
#
#
# Bon courage pour la configuration des messages !


PersonalVariable:
  # Dans ce cas, vous pourrez utiliser ce string dans n'importe quel message en écrivant '{prefix}'
  # <!> La case est importante ! {pRefiX} ≠ {prefix}
  prefix: "#3399FF[<s:667db6>Debug<e:0082c8>#3399FF-<s:0082c8>Stick<e:667db6>#3399FF]&r"


# Dans toutes les sections de "OnUse", vous pourrez utiliser tous les PlaceHolders de PAPI qui concernent un joueur
# en ligne. Ces placeholders vont concerner le joueur qui utilise le debugstick.
OnUse:
  # Lorsque le joueur veut éditer un bloc, mais qu'un plugin ne lui permet pas de construire à cette location.
  # Ce message n'est pas nécessaire. Je recommande d'ailleurs de ne pas l'écrire, car souvent le plugin qui bloque
  # va bloquer la construction va déjà envoyer un message au joueur.
  # PH :
  # {block} : le bloc que le joueur voulait éditer
  PluginPrevent:

  NoPerm:
    # Lorsque le joueur veut modifier une propriété, mais qu'il n'a pas la permission de l'éditer
    # Ce message n'est pas nécessaire.
    # PH :
    # {property} : la propriété que le joueur voulait éditer
    # When the player wants to modify a property, but has not ce permission
    # to modify the property.
    # This message is not necessary.
    # PH :
    # {property} : the property that the player wants to edit
    Property:  "{prefix} &cVous n'avez pas la permission d'éditer cette propriété !"

    Infinite:
      # Lorsque le joueur n'a pas la permission d'éditer une propriété avec l'infinite debugstick
      # Ce message n'est pas nécessaire.
      # PH :
      # {block} : le bloc que le joueur voulait éditer
      # {perm} : la perm manquante
      Edit:

      # Lorsque le joueur veut voir toutes les propriétés avec l'infinite debugstick, mais qu'il n'a pas la
      # perm.
      # Ce message n'est pas nécessaire
      # Les PH sont les mêmes que la section "Edit".
      See:

    # Pareil à pour la section "Infinite".
    Basic:
      Edit:
      See:

    Inspector:
      # Lorsque le joueur n'a pas la permission de voir les valeurs des propriétés d'un bloc avec l'inspecteur.
      # Ce message n'est pas nécessaire.
      # PH :
      # {block} : le bloc dont le joueur veut voir les propriétés
      # {perm} : la perm manquante
      Properties:

      # Lorsque le joueur n'a pas la perm de voir les implémentations d'un bloc.
      # Ce message n'est pas nécessaire
      # PH :
      # {block} : le bloc dont le joueur voulait voir les implémentations
      # {perm} : la perm manquante
      Implementation:

  # Lorsque le joueur veut modifier une propriété, mais que son basic debug stick n'a pas assez de durabilité.
  # Ce message n'est pas nécessaire.
  # PH :
  # {property} : la propriété que le joueur veut éditer
  NotEnoughDurability: "{prefix} &cVotre debugstick n'a pas assez de durabilité ..."

  BlackList:
    # Lorsque le joueur veut éditer un bloc qui est dans un monde blacklist
    # Ce message n'est pas nécessaire.
    # PH :
    # {block} : le bloc que le joueur voulait éditer
    World: "{prefix} &cVous ne pouvez pas éditer dans ce monde !"

    # Lorsque le joueur veut éditer un bloc dont son matériel est dans la blacklist
    # Ce message n'est pas nécessaire.
    # PH :
    # {block} : le bloc que le joueur voulait éditer.
    Material: "{prefix} &cCe bloc ne peut pas être édité !"

  # Lorsque le joueur veut éditer un bloc, mais que ce bloc n'a pas de propriété qu'il peut éditer
  # Ce message n'est pas nécessaire
  # PH :
  # {block} : le bloc que le joueur voulait éditer
  NoPropertyType:

  # Lorsque le joueur utilise un debug stick qui contient des données invalides (sûrement dû à un debug stick
  # d'une ancienne version).
  # Celui-ci n'est pas récupérable, il faut lui demander de le remplacer.
  # Ce message est nécessaire.
  InvalidDebugStick: "{prefix} &cVotre DebugStick est corrompu, veuillez contacter un administrateur afin d'en récupérer
  un nouveau !
  \nLe votre n'est plus utilisable !"

  # Lorsque le joueur change la propriété de son debug stick
  # Ce message n'est pas nécessaire
  # PH :
  # {property} : la propriété que le debugstick a
  # {block} : le bloc que le joueur a cliqué
  ChangeProperty:
  ChangePropertyHotbar: "{prefix} &aChangement de la propriété en &e{property_name}"

  # Lorsque le joueur veut regarder toutes les propriétés d'un bloc
  # Je conseille de ne pas définir de message pour la hotbar, car chaque message va être envoyé l'un à la suite de
  # l'autre et le joueur ne va pas avoir le temps de les lire.
  # Le plugin va envoyer dans l'ordre :
  # 1) Before
  # 2) Property (pour chaque propriété) ou 'Current' (si la propriété est la sélectionné)
  # 3) After
  ListProperties:
    # Pour les "Before" et "After" les PH sont les mêmes.
    # Ces messages ne sont pas nécessaires.
    # PH :
    # {block} : le bloc qui a toutes les propriétés
    Before: "{prefix} &aListe des propriétés pour &e{block_material} &a:"
    After:

    # Pour 'Property' et 'Current' les PH sont les mêmes
    # Ils sont nécessaires !
    # PH :
    # {property} : la propriété
    # {block} : le bloc qui a toutes les propriétés
    # {value} : la valeur de la propriété
    Property: "   &8» &9{property_name} &7= &e{value} &8&o(&e&o{property_durability}&8&o)"
    Current: "   &8» &9{property_name} &7= &e{value} &8&o(&e&o{property_durability}&8&o) &e«"

  # Lorsque le joueur enlève toutes les valeurs permanentes d'un bloc
  # Ce message n'est pas nécessaire
  # PH :
  # {block} : le bloc dont le joueur a retiré les propriétés permanentes
  RemovePermanentValue: "{prefix} &aToutes les propriétés permanentes ont été retirées"

  # Lorsque le joueur change la valeur de la propriété d'un bloc
  # Ce message n'est pas nécessaire
  # PH :
  # {block} : le bloc que le joueur a édité
  # {property} : la propriété que le joueur a édité
  # {value} : la nouvelle valeur de la propriété
  Success:
  SuccessHotbar: "{prefix} &aPropriété &e{property_name} &achangé à &e{value}"

  # Lorsque le basic debug stick casse
  # Ce message ne remplace pas le message "Success"
  # Ce message n'est pas nécessaire
  # PH :
  # {block} : le bloc que le joueur a édité
  # {property} : la propriété que le joueur a édité
  # {value} : la valeur de la propriété
  Break: "{prefix} &aVotre debug stick a cassé !"

  # Si vous n'avez pas activer l'option "WarnPlayerWhenBreaking". Vous pouvez ignorer ce message.
  # C'est le message que recevra le joueur pour lui alerter de la durabilité restante de son basic
  # debug stick.
  # Ce message n'est pas nécessaire (même si vous avez activé l'option)
  # PH :
  # {block} : le bloc que le joueur vient de modifié
  # {property} : la propriété que le joueur vient d'éditer
  # {value} : la valeur de la propriété
  # {durability} : la durabilité restante de son debug stick
  WarnBreakMessage: "{prefix} &aVotre debug stick va bientôt casser &7(&e{durability} restantes&7)"

Command:
  PDS:
    # Lorsque le joueur n'a pas la permission d'utiliser la commande '/pds'
    # Ce message n'est pas nécessaire
    # PH :
    # {perm} : la permission manquante
    NoPerm: "{prefix} &cVous n'avez pas la permission d'utiliser cette commande !"

    # Lorsque le sender ne donne pas assez d'argument à la commande
    # Ce message est nécessaire !
    # PH : /
    NotEnoughArg: "{prefix} &cVeuillez donner plus d'argument !"

    Arg:
      Give:
        # Lorsque le joueur veut utiliser la commande '/pds give', mais qu'il n'a pas la permission.
        # Ce message n'est pas nécessaire
        # PH :
        # {perm} : la permission manquante
        NoPerm: "{prefix} &cVous n'avez pas la permission d'utiliser cette commande !"

        # Lorsque le sender ne donne pas le pseudo du joueur
        # Ce message est nécessaire !
        # PH : /
        NoPlayer: "{prefix} &cVeuillez donner le nom du joueur à qui donner !"

        # Lorsque le joueur donné en paramètre n'existe pas ou n'est pas connecté
        # Ce message est nécessaire !
        # PH :
        # {player} : le joueur qui n'existe pas
        UnknownPlayer: "{prefix} &cLe joueur &4{player} &cn'existe pas ou n'est pas connecté !"

        # Lorsque le sender n'indique pas quel item à donner
        # Ce message est nécessaire !
        # PH :
        # {player} : le joueur qui aurai dû recevoir un item
        WhatToGive: "{prefix} &cVeuillez indiquer le nom de l'item à donner !"

        # Lorsque l'item passé en paramètre n'est ni basic, infinity ou inspector
        # Ce message est nécessaire !
        # PH :
        # {player} : le joueur qui aurait dû recevoir un item
        # {item} : l'item qui n'existe pas
        UnknownItem: "{prefix} &cMauvais item ! L'item &4{item} &cn'est ni basic, infinity ou inspector"

        # Lorsque le l'item est 'basic', mais qu'aucune durabilité n'a été indiquée
        # Ce message est nécessaire !
        # PH :
        # {player} : le joueur qui aurait dû recevoir l'item
        NoDurability: "{prefix} &cVeuillez indiquer la durabilité du debugstick !"

        # Lorsque la durabilité indiquée est invalide
        # Ce message est nécessaire !
        # PH :
        # {player} : le joueur qui aurait dû recevoir l'item
        # {durability} : la durabilité invalide
        InvalidDurability: "{prefix} &cDurabilité invalide !"

        # Lorsque le joueur a bien reçu l'item
        # Ce message est nécessaire !
        # PH :
        # {player} : le joueur qui a reçu l'item
        Success: "{prefix} &aVous avez donné &2{item} &aà &2{player} &a!"

      ReloadConfig:
        # Lorsque le joueur n'a pas la permission de reload la config
        # Ce message n'est pas nécessaire !
        # PH :
        # {perm} : la permission manquante
        NoPerm: "{prefix} &cVous n'avez pas la permission d'utiliser cette commande !"

        # Lorsque la config a été reload sans problème
        # Ce message est nécessaire !
        # PH : /
        Success: "{prefix} &aLa configuration a été mise à jour !"

        # Lorsque le plugin ne peut plus marcher correctement à cause d'une erreur critique dans la
        # configuration.
        # Dans ce cas, en plus du message, le plugin va log le soucis.
        # Ce message est nécessaire !
        # PH : /
        Error: "{prefix} &cUne erreur &4critique &cdans la configuration est présente !
        \n&4&lDésactivation du plugin !
        \n&c&oMerci de regarder les logs pour plus d'informations"

      Load:
        # Lorsque le joueur n'a pas la permission de charger un fichier
        # Ce message n'est pas nécessaire !
        # PH :
        # {perm} : la perm manquante
        NoPerm: "{prefix} &cVous n'avez pas la permission d'utiliser cette commande !"

        # Lorsque le joueur ne donne pas le nom du fichier à charger
        # Ce message est nécessaire !
        # PH : /
        NotEnoughArg: "{prefix} &cVeuillez préciser quel message doit être chargé !"

        # Lorsque le fichier n'existe pas
        # Ce message est nécessaire !
        # PH :
        # {file} : le message qui n'existe pas

        FileNotExists: "{prefix} &cLe fichier &4{file} &cn'existe pas !"

        # Lorsque le fichier existe déjà et que le sender ne veut pas l'écraser
        # Ce message est nécessaire !
        # PH :
        # {file} : le fichier qui existe déjà
        FileAlreadyExists: "{prefix} &cLe fichiere &4{file} &cexiste déjà !
        \n&aUtilisez la commande &2&o/pds load {file} over-write &apour l'écraser"
        FileAlreadyExistsHover: "Cliquez pour avoir la commande"
        FileAlreadyExistsSuggest: "/pds load {file} over-write"

        # Lorsque le fichier a été chargé
        # Ce message est nécessaire !
        # PH :
        # {file} : le fichier qui a été chargé
        Success: "{prefix} &aLe fichier &2{file} &aa été chargé !"

      Chunk:

        # When the be.machigan.protecteddebugstickl.command sender is not a player (be.machigan.protecteddebugstickl.command is based on location)
        # This message is necessary
        OnlyPlayer: "{prefix} &cSeuls les joueurs peuvent exécuter cette commande !"

        # When the player doesn't provide the next arg
        # This message is necessary
        NotEnoughArg: "{prefix} &cVeuillez préciser plus d'argument !"

        Arg:
          Info:
            # Lorsque le joueur n'a pas la permission d'utiliser la commande '/pds chunk info'
            # Ce message n'est pas nécessaire
            # PH :
            # {perm} : la permission manquante
            NoPerm: "{prefix} &cVous n'avez pas la permission d'utiliser cette commande !"

            # Lorsque le chunk n'a pas stocké d'informations sur le plugin
            # Ce message est nécessaire
            NoInfo: "{prefix} &8&oLe chunk n'a pas d'informations ..."

            # La première ligne avant chaque ligne d'informations
            # Ce message est nécessaire
            FirstLine: "{prefix} &aListe des blocs ne pouvant pas être modifiés &enaturellement &a:"

            # Représente une ligne par bloc ne pouvant pas être modifié naturellement dans le chunk
            # Ce message est nécessaire
            # PH :
            # {block} : le bloc qui ne peut pas être modifié naturellement
            Line: "   &8» &9{block_material} &7= &c{block_loc_x} &2{block_loc_y} &b{block_loc_z}"
            LineHover: "&aCliquez pour vous téléportez en &c{block_loc_x} &2{block_loc_y} &b{block_loc_z}"
            LineRun: "/tp {block_loc_x} {block_loc_y} {block_loc_z}"
          Clear:
            # Lorsque le joueur n'a pas la permission d'utiliser la commande '/pds chunk info'
            # Ce message n'est pas nécessaire
            # PH :
            # {perm} : la permission manquante
            NoPerm: "{prefix} &cVous n'avez pas la permission d'utiliser cette commande !"

            # Lorsque tous les blocs du chunk peuvent maintenant subir la physique
            # Ce message est nécessaire
            Success: "{prefix} &aLe chunk est revenu à la &anormal"

    # Lorsque l'argument n'existe pas
    # ce message n'est pas nécessaire !
    # PH :
    # {arg} : le mauvais argument
    NoCommandFound: "{prefix} &cCommande introuvable"
